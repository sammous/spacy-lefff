name: Tests

on: [push, pull_request]

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Linting
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./spacy_lefff /tests"
          version: "22.6"
  Linux:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and set up Poetry
      run: |
        python get-poetry.py --preview -y
        source $HOME/.poetry/env
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install -v
    - name: Test
      run: |
        source $HOME/.poetry/env
        poetry run spacy download fr_core_news_sm
        poetry run pytest --cov=. --cov-report=xml
    #----------------------------------------------
    #             upload coverage stats
    # (requires CODECOV_TOKEN in repository secrets)
    #----------------------------------------------
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
        file: ./coverage.xml
        fail_ci_if_error: true
  MacOS:
    needs: Linting
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and set up Poetry
      run: |
        python get-poetry.py --preview -y
        source $HOME/.poetry/env
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install -v 
    - name: Test
      run: |
        source $HOME/.poetry/env
        poetry run spacy download fr_core_news_sm
        poetry run pytest --cov=. --cov-report=xml
    #----------------------------------------------
    #             upload coverage stats
    # (requires CODECOV_TOKEN in repository secrets)
    #----------------------------------------------
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
        file: ./coverage.xml
        fail_ci_if_error: true
  Windows:
    needs: Linting
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and setup Poetry
      run: |
        python get-poetry.py --preview -y
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry install -v
    - name: Test
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry run spacy download fr_core_news_sm
        poetry run pytest --cov=. --cov-report=xml
    #----------------------------------------------
    #             upload coverage stats
    # (requires CODECOV_TOKEN in repository secrets)
    #----------------------------------------------
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
        file: ./coverage.xml
        fail_ci_if_error: true